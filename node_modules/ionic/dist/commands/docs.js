"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const cli_utils_1 = require("@ionic/cli-utils");
const modules_1 = require("../lib/modules");
let DocsCommand = class DocsCommand extends cli_utils_1.Command {
    run(inputs, options) {
        return __awaiter(this, void 0, void 0, function* () {
            let url = '';
            const opn = modules_1.load('opn');
            const docsHomepage = 'https://ionicframework.com/docs';
            const results = yield this.env.hooks.fire('command:docs', { cmd: this, env: this.env, inputs, options });
            if (results.length === 0) {
                url = docsHomepage;
            }
            else {
                [url] = results;
            }
            try {
                yield cli_utils_1.createRequest('head', url);
            }
            catch (e) {
                if (cli_utils_1.isSuperAgentError(e)) {
                    if (e.response.status === 404) {
                        this.env.log.warn(`Docs not found for your specific version of Ionic. Directing you to latest docs.`);
                        opn(`${docsHomepage}/api`, { wait: false });
                        return;
                    }
                }
                throw e;
            }
            opn(url, { wait: false });
            this.env.log.ok('Launched Ionic docs in your browser!');
        });
    }
};
DocsCommand = __decorate([
    cli_utils_1.CommandMetadata({
        name: 'docs',
        type: 'global',
        description: 'Open the Ionic documentation website',
    })
], DocsCommand);
exports.DocsCommand = DocsCommand;
