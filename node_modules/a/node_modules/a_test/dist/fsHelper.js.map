{"version":3,"sources":["../src/fsHelper.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEqB,Q;AAEjB,wBAA0C;AAAA,YAA9B,IAA8B;AAAA,YAAb,EAAa;;AAAA;;AACtC,aAAK,KAAL,GAAa,IAAb;AACA,aAAK,GAAL,GAAW,EAAX;AACH;;;;wCAEe,e,EAAiB;AAC7B,gBAAI,SAAS,EAAb;AACA,gBAAI,qBAAqB,KAAK,KAAL,CAAW,OAAX,CAAmB,eAAnB,CAAzB;AACA,gBAAI,WAAW,mBAAmB,KAAnB,CAAyB,KAAK,KAAL,CAAW,GAApC,CAAf;;AAEA,gBAAI,uBAAJ;AACA,mBAAO,CAAC,qBAAW,WAAX,CAAuB,cAAvB,CAAR,EAAgD;AAC5C,uBAAO,IAAP,CAAY,SAAS,IAAT,CAAc,KAAK,KAAL,CAAW,GAAzB,CAAZ;AACA,iCAAiB,SAAS,GAAT,EAAjB;AACH;AACD,mBAAO,MAAP;AACH;;;sCAEa,I,EAAM;AAChB,mBAAO,KAAK,GAAL,CAAS,WAAT,CAAqB,IAArB,CAAP;AACH;;;+BAEM,I,EAAM;AACT,mBAAO,KAAK,GAAL,CAAS,UAAT,CAAoB,IAApB,CAAP;AACH;;;;;;kBA1BgB,Q","file":"fsHelper.js","sourcesContent":["import nameHelper from './nameHelper';\nimport realPath from 'path';\nimport realFs from 'fs';\n\nexport default class FsHelper {\n\n    constructor(path = realPath, fs = realFs) {\n        this._path = path;\n        this._fs = fs;\n    }\n\n    getRelevantDirs(suiteModulePath) {\n        let result = [];\n        let suiteModuleDirPath = this._path.dirname(suiteModulePath);\n        let dirnames = suiteModuleDirPath.split(this._path.sep);\n\n        let currentDirname;\n        while (!nameHelper.isTopFolder(currentDirname)) {\n            result.push(dirnames.join(this._path.sep));\n            currentDirname = dirnames.pop();\n        }\n        return result;\n    }\n\n    getFilesInDir(path) {\n        return this._fs.readdirSync(path);\n    }\n\n    exists(path) {\n        return this._fs.existsSync(path);\n    }\n}\n"]}