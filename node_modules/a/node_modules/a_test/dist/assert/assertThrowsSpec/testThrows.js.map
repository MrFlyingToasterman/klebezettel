{"version":3,"sources":["../../../src/assert/assertThrowsSpec/testThrows.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,YAAR,CAAX;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,IAAI,QAAQ,QAAR,CAAR;AACA,IAAI,cAAc,EAAE,WAApB;AACA,IAAI,OAAO,EAAE,IAAb;AACA,IAAI,WAAW,YAAY,aAAZ,CAAf;;AAEA,IAAI,QAAQ,EAAZ;IAAgB,QAAQ,SAAR,KAAQ,GAAU;AAAE,OAAM,OAAN;AAAgB,CAApD;IAAsD,QAAQ,OAA9D;;AAEA,QAAQ,GAAR,CAAY,aAAZ;;AAEA,SAAS,EAAT,GAAc,MAAd;AACA,SAAS,EAAT,CAAY,MAAZ,CAAmB,KAAnB,EAA0B,MAA1B;;AAEA,IAAI,MAAM,QAAQ,iBAAR,CAAV;AACA,IAAI,KAAJ,EAAU,KAAV,EAAgB,KAAhB;;AAGA,KAAK,qBAAL,EAA4B,YAAW;AACtC,QAAO,YAAP,CAAoB,SAAS,EAAT,CAAY,MAAhC;AACA,CAFD","file":"testThrows.js","sourcesContent":["var test = require('../../test');\nvar assert = require('assert');\nvar a = require('a_mock')\nvar requireMock = a.requireMock;\nvar mock = a.mock;\nvar reporter = requireMock('../reporter');\n\nvar title = {}, block = function(){ throw 'error'; }, error = 'error';\n\nconsole.log('when throws');\n\nreporter.ok = mock();\nreporter.ok.expect(title).return();\n\nvar sut = require('../assertThrows');\nsut(title,block,error);\n\n\ntest('it should report ok', function() {\n\tassert.doesNotThrow(reporter.ok.verify);\n});\n\n"]}