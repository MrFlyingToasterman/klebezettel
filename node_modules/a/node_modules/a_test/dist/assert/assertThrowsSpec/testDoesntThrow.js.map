{"version":3,"sources":["../../../src/assert/assertThrowsSpec/testDoesntThrow.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,YAAR,CAAX;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,IAAI,QAAQ,QAAR,CAAR;AACA,IAAI,cAAc,EAAE,WAApB;AACA,IAAI,OAAO,EAAE,IAAb;AACA,IAAI,WAAW,YAAY,aAAZ,CAAf;;AAEA,IAAI,QAAQ,EAAZ;IAAgB,QAAQ,SAAR,KAAQ,GAAW,CAAE,CAArC;IAAuC,QAAQ,EAA/C;;AAEA,QAAQ,GAAR,CAAY,qBAAZ;AACA,IAAI,eAAe,qBAAqB,KAAxC;AACA,IAAI,aAAa,cAAc,SAA/B;AACA,SAAS,IAAT,GAAgB,MAAhB;AACA,SAAS,IAAT,CAAc,MAAd,CAAqB,KAArB,EAA4B,YAA5B,EAA0C,cAA1C,GAA2D,MAA3D;;AAEA,IAAI,MAAM,QAAQ,iBAAR,CAAV;AACA,IAAI,KAAJ,EAAU,KAAV,EAAgB,KAAhB;;AAGA,KAAK,yBAAL,EAAgC,YAAW;AAC1C,QAAO,YAAP,CAAoB,SAAS,IAAT,CAAc,MAAlC;AACA,CAFD","file":"testDoesntThrow.js","sourcesContent":["var test = require('../../test');\nvar assert = require('assert');\nvar a = require('a_mock')\nvar requireMock = a.requireMock;\nvar mock = a.mock;\nvar reporter = requireMock('../reporter');\n\nvar title = {}, block = function() {}, error = '';\n\nconsole.log('when does not throw');\nvar expectedText = 'Expected error: ' + error;\nvar actualText = 'But was: ' + undefined;\nreporter.fail = mock();\nreporter.fail.expect(title, expectedText).expectAnything().return();\n\nvar sut = require('../assertThrows');\nsut(title,block,error);\n\n\ntest('it should report failed', function() {\n\tassert.doesNotThrow(reporter.fail.verify);\n});\n\n"]}