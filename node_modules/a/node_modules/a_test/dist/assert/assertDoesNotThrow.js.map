{"version":3,"sources":["../../src/assert/assertDoesNotThrow.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,QAAQ,aAAR,EAAuB,OAAtC;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,OAAO,YAA1B;AACA,IAAI,iBAAiB,QAAQ,kBAAR,CAArB;;AAGA,OAAO,OAAP,GAAiB,UAAS,KAAT,EAAe,KAAf,EAAsB;AACrC,KAAI;AACH,eAAa,KAAb;AACA,EAFD,CAGA,OAAO,GAAP,EAAY;AACX,MAAI,eAAe,uBAAnB;AACD,MAAI,aAAa,aAAjB;;AAEA,MAAG,IAAI,KAAJ,IAAa,SAAhB,EAA2B;AAC1B,iBAAc,GAAd;AACA,GAFD,MAEO;AACN,iBAAc,eAAe,GAAf,CAAd;AACA;;AAEA,WAAS,IAAT,CAAc,KAAd,EAAqB,YAArB,EAAmC,UAAnC;AACA;AACA;AACD,UAAS,EAAT,CAAY,KAAZ;AACD,CAlBD","file":"assertDoesNotThrow.js","sourcesContent":["var reporter = require('../reporter').default;\n\nvar assert = require('assert');\nvar doesNotThrow = assert.doesNotThrow;\nvar trimStackTrace = require('./trimStackTrace');\n\n\nmodule.exports = function(title,block) {\t\t\n\t try {\t\t\n\t \tdoesNotThrow(block);\t \t\n\t } \t \n\t catch (err) {\n\t \tvar expectedText = 'Expected not to throw';\n\t\tvar actualText = 'but threw: ';\n\t\t\n\t\tif(err.stack == undefined) {\n\t\t\tactualText += err;\n\t\t} else {\n\t\t\tactualText += trimStackTrace(err);\n\t\t}\n\n\t \treporter.fail(title, expectedText, actualText);\n\t \treturn;\n\t }\n\t reporter.ok(title);\t\n};"]}