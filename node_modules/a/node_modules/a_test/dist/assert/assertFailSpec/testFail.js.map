{"version":3,"sources":["../../../src/assert/assertFailSpec/testFail.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,YAAR,CAAX;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,IAAI,QAAQ,QAAR,CAAR;AACA,IAAI,cAAc,EAAE,WAApB;AACA,IAAI,OAAO,EAAE,IAAb;AACA,IAAI,WAAW,YAAY,aAAZ,CAAf;;AAEA,IAAI,QAAQ,EAAZ;IAAgB,QAAQ,EAAxB;;AAEA,QAAQ,GAAR,CAAY,eAAZ;;AAEA,SAAS,IAAT,GAAgB,MAAhB;AACA,SAAS,IAAT,CAAc,MAAd,CAAqB,KAArB,EAA4B,MAA5B;;AAEA,IAAI,MAAM,QAAQ,eAAR,CAAV;AACA,IAAI,KAAJ;;AAGA,KAAK,uBAAL,EAA8B,YAAW;AACxC,QAAO,YAAP,CAAoB,SAAS,IAAT,CAAc,MAAlC;AACA,CAFD","file":"testFail.js","sourcesContent":["var test = require('../../test');\nvar assert = require('assert');\nvar a = require('a_mock')\nvar requireMock = a.requireMock;\nvar mock = a.mock;\nvar reporter = requireMock('../reporter');\n\nvar title = {}, value = {};\n\nconsole.log('when executed');\n\nreporter.fail = mock();\nreporter.fail.expect(title).return();\n\nvar sut = require('../assertFail');\nsut(title);\n\n\ntest('it should report fail', function() {\n\tassert.doesNotThrow(reporter.fail.verify);\n});\n\n"]}