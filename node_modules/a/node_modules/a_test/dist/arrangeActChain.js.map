{"version":3,"sources":["../src/arrangeActChain.js"],"names":[],"mappings":";;;;;;;;;;;;IAAqB,e;;;;;;;8BAEX,O,EAAS,O,EAAS;AACpB,iBAAK,QAAL,GAAgB,OAAhB;AACA,iBAAK,QAAL,GAAgB,OAAhB;AACH;;;;qDAUe;AAAA;AAAA;AAAA;;AAAA;AACZ,yCAAgB,KAAK,QAArB,8HAA+B;AAAA,4BAAtB,GAAsB;;AAC3B,8BAAM,IAAI,KAAK,QAAT,CAAN;AACH;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIf,a;;;;;;;;;;sCAEa;AAAA;;AACV,iBAAK,QAAL,CAAc,OAAd,CAAsB,eAAO;AACzB,oBAAI,MAAK,QAAT;AACH,aAFD;AAGH;;;4BAlBa;AACV,mBAAO,KAAK,QAAZ;AACH;;;4BAEa;AACV,mBAAO,KAAK,QAAZ;AACH;;;;;;kBAbgB,e","file":"arrangeActChain.js","sourcesContent":["export default class ArrangeActChain {\n\n    setup(actList, context) {\n        this._actList = actList;\n        this._context = context;\n    }\n\n    get actList() {\n        return this._actList;\n    }\n\n    get context() {\n        return this._context;\n    }\n\n    async execute() {\n        for (let act of this._actList) {\n            await act(this._context);\n        }\n    }\n\n    executeSync() {\n        this._actList.forEach(act => {\n            act(this._context);\n        });\n    }\n\n}\n"]}