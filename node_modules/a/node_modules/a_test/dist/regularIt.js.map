{"version":3,"sources":["../src/regularIt.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,cAAc,QAAQ,sBAAR,CAAlB;AACA,IAAI,iBAAiB,QAAQ,yBAAR,CAArB;AACA,IAAI,kBAAkB,QAAQ,0BAAR,CAAtB;AACA,IAAI,qBAAqB,QAAQ,6BAAR,CAAzB;AACA,IAAI,oBAAoB,QAAQ,4BAAR,CAAxB;AACA,IAAI,uBAAuB,QAAQ,+BAAR,CAA3B;AACA,IAAI,WAAW,QAAQ,mBAAR,CAAf;AACA,IAAI,eAAe,QAAQ,uBAAR,CAAnB;AACA,IAAI,qBAAqB,QAAQ,6BAAR,CAAzB;AACA,IAAI,aAAa,QAAQ,qBAAR,CAAjB;;AAEA,SAAS,MAAT,GAAkB;AACjB,QAAO;AACN,MAAI;AADE,EAAP;AAGA;AACD,SAAS,EAAT,CAAY,KAAZ,EAAmB;AAClB,KAAI,SAAS,EAAb;;AAEA,QAAO,QAAP,GAAkB,UAAS,KAAT,EAAgB;AACjC,WAAS,KAAT,EAAe,KAAf;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,MAAP,GAAgB,OAAO,QAAvB;;AAEA,QAAO,WAAP,GAAqB,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AAC/C,cAAY,KAAZ,EAAkB,QAAlB,EAA2B,MAA3B;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,cAAP,GAAwB,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AAClD,iBAAe,KAAf,EAAqB,QAArB,EAA8B,MAA9B;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,eAAP,GAAyB,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AACnD,kBAAgB,KAAhB,EAAsB,QAAtB,EAA+B,MAA/B;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,kBAAP,GAA4B,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AACtD,qBAAmB,KAAnB,EAAyB,QAAzB,EAAkC,MAAlC;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,iBAAP,GAA2B,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AACrD,oBAAkB,KAAlB,EAAwB,QAAxB,EAAiC,MAAjC;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,oBAAP,GAA8B,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AACxD,uBAAqB,KAArB,EAA2B,QAA3B,EAAoC,MAApC;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,YAAP,GAAsB,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC5C,eAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,kBAAP,GAA4B,UAAS,KAAT,EAAgB;AAC3C,qBAAmB,KAAnB,EAAyB,KAAzB;AACA,SAAO,QAAP;AACA,EAHD;;AAKA,QAAO,UAAP,GAAoB,YAAW;AAC9B,aAAW,KAAX;AACA,SAAO,QAAP;AACA,EAHD;;AAMA,QAAO,MAAP;AACA;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"regularIt.js","sourcesContent":["var assert = require('assert');\nvar assertEqual = require('./assert/assertEqual');\nvar assertNotEqual = require('./assert/assertNotEqual');\nvar assertDeepEqual = require('./assert/assertDeepEqual');\nvar assertNotDeepEqual = require('./assert/assertNotDeepEqual');\nvar assertStrictEqual = require('./assert/assertStrictEqual');\nvar assertNotStrictEqual = require('./assert/assertNotStrictEqual');\nvar assertOk = require('./assert/assertOk');\nvar assertThrows = require('./assert/assertThrows');\nvar assertDoesNotThrow = require('./assert/assertDoesNotThrow');\nvar assertFail = require('./assert/assertFail');\n\nfunction new_it() {\n\treturn {\n\t\tit: it\n\t};\n}\nfunction it(title) {\n\tvar retval = {};\n\n\tretval.assertOk = function(value) {\n\t\tassertOk(title,value);\n\t\treturn new_it();\n\t};\n\n\tretval.assert = retval.assertOk;\n\n\tretval.assertEqual = function(expected, actual) {\n\t\tassertEqual(title,expected,actual);\n\t\treturn new_it();\n\t};\n\n\tretval.assertNotEqual = function(expected, actual) {\n\t\tassertNotEqual(title,expected,actual);\n\t\treturn new_it();\n\t};\n\n\tretval.assertDeepEqual = function(expected, actual) {\n\t\tassertDeepEqual(title,expected,actual);\n\t\treturn new_it();\n\t};\n\n\tretval.assertNotDeepEqual = function(expected, actual) {\n\t\tassertNotDeepEqual(title,expected,actual);\n\t\treturn new_it();\n\t};\n\n\tretval.assertStrictEqual = function(expected, actual) {\n\t\tassertStrictEqual(title,expected,actual);\n\t\treturn new_it();\n\t};\n\n\tretval.assertNotStrictEqual = function(expected, actual) {\n\t\tassertNotStrictEqual(title,expected,actual);\n\t\treturn new_it();\n\t};\n\n\tretval.assertThrows = function(block, error) {\n\t\tassertThrows(title,block,error);\n\t\treturn new_it();\n\t};\n\n\tretval.assertDoesNotThrow = function(block) {\n\t\tassertDoesNotThrow(title,block);\n\t\treturn new_it();\n\t};\n\n\tretval.assertFail = function() {\n\t\tassertFail(title);\n\t\treturn new_it();\n\t};\n\n\n\treturn retval;\n}\n\nmodule.exports = new_it();\n\n"]}